import { TelegramClient } from 'telegram';
import { StringSession } from 'telegram/sessions/index.js';
import dotenv from 'dotenv';
import input from 'input'; // Ensure installed: npm install input

dotenv.config();

const apiId = parseInt(process.env.API_ID);
const apiHash = process.env.API_HASH;

let stringSession = new StringSession(process.env.SESSION || '');

const client = new TelegramClient(stringSession, apiId, apiHash, {
  connectionRetries: 5,
});

export async function startClient() {
  try {
    await client.start({
      phoneNumber: async () => await input.text('ЁЯУ▒ ржлрзЛржи ржиржорзНржмрж░ ржжрж┐ржи (with country code):'),
      password: async () => await input.text('ЁЯФР 2FA ржкрж╛рж╕ржУржпрж╝рж╛рж░рзНржб ржжрж┐ржи (ржпржжрж┐ ржерж╛ржХрзЗ):'),
      phoneCode: async () => await input.text('ЁЯУи ржлрзЛржирзЗ ржкрж╛ржУрзЯрж╛ ржХрзЛржб рж▓рж┐ржЦрзБржи:'),
      onError: (err) => console.error('тЭМ Client error:', err.message),
    });

    console.log('\nтЬЕ TelegramClient рж╕ржлрж▓ржнрж╛ржмрзЗ ржЪрж╛рж▓рзБ рж╣ржпрж╝рзЗржЫрзЗ!');
    
    const sessionString = client.session.save();
    console.log('\nЁЯз╛ ржирж┐ржЪрзЗрж░ SESSION ржХрзЗ .env ржлрж╛ржЗрж▓рзЗ SESSION=... рж╣рж┐рж╕рж╛ржмрзЗ рж╕ржВрж░ржХрзНрж╖ржг ржХрж░рзБржи:\n');
    console.log(sessionString);
    console.log('\nЁЯУМ ржЙржжрж╛рж╣рж░ржг: SESSION=' + sessionString);
  } catch (err) {
    console.error('тЭМ Login ржмрзНржпрж░рзНрже:', err.message);
  }
}

export default client;
